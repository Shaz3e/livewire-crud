<?php

namespace App\Http\Livewire;

use Livewire\Component;
use Livewire\WithPagination;
use App\Models\{{modelName}};

class {{modelName}}s extends Component
{
    use WithPagination;

     protected $listeners = [
        'confirmed',
        'cancelled',
    ];

	protected $paginationTheme = 'bootstrap';
    public $selected_id, $keyWord,$deleteId, {{updatefield}};

    public function render()
    {
		$keyWord = '%'.$this->keyWord .'%';
        return view('livewire.{{modelNamePluralLowerCase}}.index', [
            '{{modelNamePluralLowerCase}}' => {{modelName}}::latest(){{search}}
						->paginate(10),
        ])->extends('layouts.app');
    }



    public function resetInput()
    {		{{resetfields}}
    }

    public function store()
    {
        $this->validate([{{rules}}
        ]);

        {{modelName}}::create([ {{addfields}}
        ]);

        $this->resetInput();
		$this->emit('closeModal');
		 $this->alert('success', '{{modelName}} Successfully created.');
    }

    public function edit($id)
    {
        $record = {{modelName}}::findOrFail($id);

        $this->selected_id = $id; {{editfields}}

    }
    public function show($id)
    {
        $record = {{modelName}}::findOrFail($id);

        $this->selected_id = $id; {{editfields}}

    }

    public function update()
    {
        $this->validate([{{rules}}
        ]);

        if ($this->selected_id) {
			$record = {{modelName}}::find($this->selected_id);
            $record->update([ {{addfields}}
            ]);

            $this->resetInput();
			$this->alert('success', '{{modelName}} Successfully updated.');
        }
    }

     public function triggerConfirm($id)
    {
        $this->datetId = $id;
        $this->confirm('Do you want to delete?', [
            'toast' => false,
            'position' => 'center',
            'showConfirmButton' => true,
            'cancelButtonText' => 'Cancel',
            'onConfirmed' => 'confirmed',
            'onCancelled' => 'cancelled',
        ]);
    }

    public function confirmed()
    {
        $this->destroy();
        $this->alert( 'success', 'Deleted successfully.');
    }

    public function cancelled()
    {
        $this->alert('info', 'Understood');
    }

    public function destroy()
    {
        if ($this->datetId) {
            $record = {{modelName}}::where('id', $this->datetId);
            $record->delete();
        }
    }


}
